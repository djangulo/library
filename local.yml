version: '3.7'

networks:
  library_local:

volumes:
  local_client: {}
  local_api: {}
  local_postgres_data: {}
  local_postgres_backups: {}

services:
  client:
    build:
      context: .
      dockerfile: ./compose/local/client/Dockerfile
    image: client_local
    restart: always
    volumes:
      - local_client:/client
    env_file:
      - ./.envs/.local/.client
    command: yarn run start
    networks:
      - library_local
    ports:
      - '3000:3000'

  api:
    build:
      context: .
      dockerfile: ./compose/staging/api/Dockerfile
    image: api_local
    command:
      ['./wait-for', 'postgres:5432', '-t', '240', '--', 'yarn', 'run', 'start']
    # command: ['yarn', 'run', 'start']
    networks:
      - library_local
    ports:
      - '9000:9000'
    volumes:
      - local_api:/api
    depends_on:
      - postgres
    env_file:
      - ./.envs/.local/.postgres
      - ./.envs/.local/.api
      - ./.envs/.local/.client

  postgres:
    build:
      context: .
      dockerfile: ./compose/staging/postgres/Dockerfile
    healthcheck:
      test: ['CMD', 'sh', '-c', '/usr/local/bin/healthcheck']
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    expose:
      - '5432'
    image: library_local_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - library_local
